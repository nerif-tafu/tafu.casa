load_module /usr/lib/nginx/modules/ngx_rtmp_module.so;
worker_processes auto;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 1024;

        application live {
            live on;
            record off;
            wait_key on;
            wait_video on;
            
            # HLS
            hls on;
            hls_path /var/www/hls;
            hls_fragment 1;
            hls_playlist_length 2;
            hls_fragment_slicing aligned;
            hls_sync 100ms;
            
            # Add these for lower latency
            hls_fragment_naming sequential;
            hls_fragment_naming_granularity 1;
            
            # Disable consuming the stream from nginx as rtmp
            deny play all;
        }
    }
}

http {
    # Add access and error logs
    access_log /dev/stdout;
    error_log /dev/stderr info;

    sendfile on;
    tcp_nopush off;
    directio off;
    default_type application/octet-stream;
    
    # Add these for better performance
    tcp_nodelay on;
    keepalive_timeout 65;
    reset_timedout_connection on;

    # Add mime types
    include /etc/nginx/mime.types;

    # Upstream for web service
    upstream web {
        server ${WEB_UPSTREAM}:3000;
    }

    # Upstream for webrtc service
    upstream webrtc {
        server ${WEBRTC_UPSTREAM}:9000;
    }

    server {
        listen 9000;  # Changed from 8080 to 9000
        server_name _;  # Accept any hostname
        
        # Proxy to web service
        location / {
            proxy_pass http://web;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy to webrtc service
        location /webrtc/ {
            proxy_pass http://webrtc/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            # WebSocket support
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
        }

        # Add WebSocket endpoint
        location /socket.io/ {
            proxy_pass http://webrtc/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
        }

        location /hls/ {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /var/www;
        }
    }
} 